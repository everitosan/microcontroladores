
Ejemplo5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800100  000000fa  0000018e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000fa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800120  00800120  000001ae  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  000001b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000085  00000000  00000000  0000087c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000080  00000000  00000000  00000908  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000045b  00000000  00000000  00000988  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000166  00000000  00000000  00000de3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000033a  00000000  00000000  00000f49  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000024  00000000  00000000  00001284  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000107  00000000  00000000  000012a8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	33 c0       	rjmp	.+102    	; 0x6a <__bad_interrupt>
   4:	32 c0       	rjmp	.+100    	; 0x6a <__bad_interrupt>
   6:	31 c0       	rjmp	.+98     	; 0x6a <__bad_interrupt>
   8:	30 c0       	rjmp	.+96     	; 0x6a <__bad_interrupt>
   a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
   c:	2e c0       	rjmp	.+92     	; 0x6a <__bad_interrupt>
   e:	2d c0       	rjmp	.+90     	; 0x6a <__bad_interrupt>
  10:	2c c0       	rjmp	.+88     	; 0x6a <__bad_interrupt>
  12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
  14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
  16:	29 c0       	rjmp	.+82     	; 0x6a <__bad_interrupt>
  18:	28 c0       	rjmp	.+80     	; 0x6a <__bad_interrupt>
  1a:	27 c0       	rjmp	.+78     	; 0x6a <__bad_interrupt>
  1c:	26 c0       	rjmp	.+76     	; 0x6a <__bad_interrupt>
  1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
  20:	24 c0       	rjmp	.+72     	; 0x6a <__bad_interrupt>
  22:	23 c0       	rjmp	.+70     	; 0x6a <__bad_interrupt>
  24:	22 c0       	rjmp	.+68     	; 0x6a <__bad_interrupt>
  26:	21 c0       	rjmp	.+66     	; 0x6a <__bad_interrupt>
  28:	20 c0       	rjmp	.+64     	; 0x6a <__bad_interrupt>
  2a:	1f c0       	rjmp	.+62     	; 0x6a <__bad_interrupt>
  2c:	1e c0       	rjmp	.+60     	; 0x6a <__bad_interrupt>
  2e:	1d c0       	rjmp	.+58     	; 0x6a <__bad_interrupt>
  30:	1c c0       	rjmp	.+56     	; 0x6a <__bad_interrupt>
  32:	1b c0       	rjmp	.+54     	; 0x6a <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	d2 e0       	ldi	r29, 0x02	; 2
  3c:	de bf       	out	0x3e, r29	; 62
  3e:	cd bf       	out	0x3d, r28	; 61

00000040 <__do_copy_data>:
  40:	11 e0       	ldi	r17, 0x01	; 1
  42:	a0 e0       	ldi	r26, 0x00	; 0
  44:	b1 e0       	ldi	r27, 0x01	; 1
  46:	ea ef       	ldi	r30, 0xFA	; 250
  48:	f0 e0       	ldi	r31, 0x00	; 0
  4a:	02 c0       	rjmp	.+4      	; 0x50 <__do_copy_data+0x10>
  4c:	05 90       	lpm	r0, Z+
  4e:	0d 92       	st	X+, r0
  50:	a0 32       	cpi	r26, 0x20	; 32
  52:	b1 07       	cpc	r27, r17
  54:	d9 f7       	brne	.-10     	; 0x4c <__do_copy_data+0xc>

00000056 <__do_clear_bss>:
  56:	11 e0       	ldi	r17, 0x01	; 1
  58:	a0 e2       	ldi	r26, 0x20	; 32
  5a:	b1 e0       	ldi	r27, 0x01	; 1
  5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
  5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
  60:	a4 32       	cpi	r26, 0x24	; 36
  62:	b1 07       	cpc	r27, r17
  64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
  66:	02 d0       	rcall	.+4      	; 0x6c <main>
  68:	46 c0       	rjmp	.+140    	; 0xf6 <_exit>

0000006a <__bad_interrupt>:
  6a:	ca cf       	rjmp	.-108    	; 0x0 <__vectors>

0000006c <main>:
unsigned char columnas=0;
unsigned char letra=0;

int main(void)
{
	DDRB=0xff;
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	84 b9       	out	0x04, r24	; 4
	DDRD=0xff;
  70:	8a b9       	out	0x0a, r24	; 10
					PORTD=0x80;//activa primera columna
					
			
			for(columnas=0;columnas<8;columnas++)//barrodo de columnas
			{
					PORTB=~eve[letra][columnas];
  72:	80 e0       	ldi	r24, 0x00	; 0
  74:	91 e0       	ldi	r25, 0x01	; 1
    while(1)
    {
		
		for(duration=0; duration<200;duration++)//ciclo principal
		{
					PORTD=0x80;//activa primera columna
  76:	40 e8       	ldi	r20, 0x80	; 128
	
	
    while(1)
    {
		
		for(duration=0; duration<200;duration++)//ciclo principal
  78:	10 92 23 01 	sts	0x0123, r1
  7c:	10 92 22 01 	sts	0x0122, r1
		{
					PORTD=0x80;//activa primera columna
  80:	4b b9       	out	0x0b, r20	; 11
					
			
			for(columnas=0;columnas<8;columnas++)//barrodo de columnas
  82:	10 92 21 01 	sts	0x0121, r1
  86:	20 e0       	ldi	r18, 0x00	; 0
			{
					PORTB=~eve[letra][columnas];
  88:	e0 91 20 01 	lds	r30, 0x0120
  8c:	f0 e0       	ldi	r31, 0x00	; 0
  8e:	ee 0f       	add	r30, r30
  90:	ff 1f       	adc	r31, r31
  92:	ee 0f       	add	r30, r30
  94:	ff 1f       	adc	r31, r31
  96:	ee 0f       	add	r30, r30
  98:	ff 1f       	adc	r31, r31
  9a:	e2 0f       	add	r30, r18
  9c:	f1 1d       	adc	r31, r1
  9e:	e8 0f       	add	r30, r24
  a0:	f9 1f       	adc	r31, r25
  a2:	20 81       	ld	r18, Z
  a4:	20 95       	com	r18
  a6:	25 b9       	out	0x05, r18	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a8:	e9 ef       	ldi	r30, 0xF9	; 249
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	31 97       	sbiw	r30, 0x01	; 1
  ae:	f1 f7       	brne	.-4      	; 0xac <main+0x40>
  b0:	00 c0       	rjmp	.+0      	; 0xb2 <main+0x46>
  b2:	00 00       	nop
					_delay_ms(1);
					PORTD=PORTD>>1;
  b4:	2b b1       	in	r18, 0x0b	; 11
  b6:	26 95       	lsr	r18
  b8:	2b b9       	out	0x0b, r18	; 11
		for(duration=0; duration<200;duration++)//ciclo principal
		{
					PORTD=0x80;//activa primera columna
					
			
			for(columnas=0;columnas<8;columnas++)//barrodo de columnas
  ba:	20 91 21 01 	lds	r18, 0x0121
  be:	2f 5f       	subi	r18, 0xFF	; 255
  c0:	20 93 21 01 	sts	0x0121, r18
  c4:	28 30       	cpi	r18, 0x08	; 8
  c6:	00 f3       	brcs	.-64     	; 0x88 <main+0x1c>
	
	
    while(1)
    {
		
		for(duration=0; duration<200;duration++)//ciclo principal
  c8:	20 91 22 01 	lds	r18, 0x0122
  cc:	30 91 23 01 	lds	r19, 0x0123
  d0:	2f 5f       	subi	r18, 0xFF	; 255
  d2:	3f 4f       	sbci	r19, 0xFF	; 255
  d4:	30 93 23 01 	sts	0x0123, r19
  d8:	20 93 22 01 	sts	0x0122, r18
  dc:	28 3c       	cpi	r18, 0xC8	; 200
  de:	31 05       	cpc	r19, r1
  e0:	78 f2       	brcs	.-98     	; 0x80 <main+0x14>
					_delay_ms(1);
					PORTD=PORTD>>1;
			}				
			
		}
		letra++;
  e2:	20 91 20 01 	lds	r18, 0x0120
  e6:	2f 5f       	subi	r18, 0xFF	; 255
  e8:	20 93 20 01 	sts	0x0120, r18
		if (letra==4)
  ec:	24 30       	cpi	r18, 0x04	; 4
  ee:	21 f6       	brne	.-120    	; 0x78 <main+0xc>
		{
			letra=0;
  f0:	10 92 20 01 	sts	0x0120, r1
  f4:	c1 cf       	rjmp	.-126    	; 0x78 <main+0xc>

000000f6 <_exit>:
  f6:	f8 94       	cli

000000f8 <__stop_program>:
  f8:	ff cf       	rjmp	.-2      	; 0xf8 <__stop_program>
